apiVersion: v1
kind: Template

parameters:
  - name: NAMESPACE
    required: true

objects:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: workspace-claim
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 2Gi
      storageClassName: gp2
      volumeMode: Filesystem

  - apiVersion: v1
    kind: Secret
    metadata:
      name: producer-github-webhook-secret
    data:
      WebHookSecretKey: OWNjMTRkNDRlZGI2YjExZQ==
    type: Opaque

  - apiVersion: tekton.dev/v1beta1
    kind: Pipeline
    metadata:
      labels:
        app.kubernetes.io/instance: producer
        pipeline.openshift.io/runtime: nodejs
        pipeline.openshift.io/runtime-version: 14-ubi8
        pipeline.openshift.io/type: kubernetes
      name: producer
    spec:
      params:
        - default: producer
          name: APP_NAME
          type: string
        - default: 'https://github.com/evanshortiss/knative-kafka-demo'
          name: GIT_REPO
          type: string
        - default: master
          name: GIT_REVISION
          type: string
        - default: 'image-registry.openshift-image-registry.svc:5000/${NAMESPACE}/producer'
          name: IMAGE_NAME
          type: string
        - default: producer
          name: PATH_CONTEXT
          type: string
        - default: '14-ubi8'
          name: MAJOR_VERSION
          type: string
      tasks:
        - name: fetch-repository
          params:
            - name: url
              value: $(params.GIT_REPO)
            - name: revision
              value: $(params.GIT_REVISION)
            - name: subdirectory
              value: ''
            - name: deleteExisting
              value: 'true'
          taskRef:
            kind: ClusterTask
            name: git-clone
          workspaces:
            - name: output
              workspace: workspace
        - name: build
          params:
            - name: IMAGE
              value: $(params.IMAGE_NAME)
            - name: TLSVERIFY
              value: 'false'
            - name: PATH_CONTEXT
              value: $(params.PATH_CONTEXT)
            - name: VERSION
              value: $(params.MAJOR_VERSION)
          runAfter:
            - fetch-repository
          taskRef:
            kind: ClusterTask
            name: s2i-nodejs
          workspaces:
            - name: source
              workspace: workspace
        - name: deploy
          params:
            - name: SCRIPT
              value: kubectl $@
            - name: ARGS
              value:
                - rollout
                - status
                - deploy/$(params.APP_NAME)
          runAfter:
            - build
          taskRef:
            kind: ClusterTask
            name: openshift-client
      workspaces:
        - name: workspace

  - apiVersion: triggers.tekton.dev/v1alpha1
    kind: TriggerTemplate
    metadata:
      name: trigger-template-producer
    spec:
      params:
      - name: git-revision
      - name: git-commit-message
      - name: git-repo-url
      - name: git-repo-name
      - name: content-type
      - name: pusher-name
      resourcetemplates:
      - apiVersion: tekton.dev/v1beta1
        kind: PipelineRun
        metadata:
          annotations: {}
          generateName: producer-
          labels:
            app.kubernetes.io/instance: producer
            pipeline.openshift.io/runtime: nodejs
            pipeline.openshift.io/runtime-version: 14-ubi8
            pipeline.openshift.io/type: kubernetes
            tekton.dev/pipeline: producer
          namespace: ${NAMESPACE}
        spec:
          params:
          - name: APP_NAME
            value: producer
          - name: GIT_REPO
            value: https://github.com/evanshortiss/knative-kafka-demo/
          - name: GIT_REVISION
            value: master
          - name: IMAGE_NAME
            value: image-registry.openshift-image-registry.svc:5000/${NAMESPACE}/producer
          - name: PATH_CONTEXT
            value: producer
          - name: MAJOR_VERSION
            value: "14-ubi8"
          pipelineRef:
            name: producer
          resources: []
          status: null
          workspaces:
            - name: workspace
              persistentVolumeClaim:
                claimName: workspace-claim

  - apiVersion: triggers.tekton.dev/v1alpha1
    kind: EventListener
    metadata:
      finalizers:
      - eventlisteners.triggers.tekton.dev
      name: event-listener-github
    spec:
      namespaceSelector: {}
      podTemplate: {}
      resources: {}
      serviceAccountName: pipeline
      triggers:
      - bindings:
        - kind: ClusterTriggerBinding
          ref: github-push
        template:
          name: trigger-template-producer
